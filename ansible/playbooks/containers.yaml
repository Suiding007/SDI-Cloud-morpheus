---
#made by Noa
- name: Create and start a proxmox container
  hosts: pve1270
  vars:
    #basic configuration
    cores: 1
    memory: 1024
    storage: vm-pool
    gb: 30
    password: Ubuntu

    #network
    net0_name: eth0
    bridge: vmbr0
    type: veth
    firewall: 1
    rate: 50
    dns: 1.1.1.1

    #contaier configuration
    containers: 
      - { id: 300, hostname: wordpress1, gw: 10.24.27.1, ip: 10.24.27.20/24 }
      - { id: 301, hostname: wordpress2, gw: 10.24.27.1, ip: 10.24.27.21/24 }
      - { id: 302, hostname: wordpress3, gw: 10.24.27.1, ip: 10.24.27.22/24 } 
      - { id: 303, hostname: wordpress4, gw: 10.24.27.1, ip: 10.24.27.23/24 }
      - { id: 304, hostname: wordpress5, gw: 10.24.27.1, ip: 10.24.27.24/24 } 
      - { id: 305, hostname: wordpress6, gw: 10.24.27.1, ip: 10.24.27.25/24 }
      - { id: 306, hostname: wordpress7, gw: 10.24.27.1, ip: 10.24.27.26/24 } 
      - { id: 307, hostname: wordpress8, gw: 10.24.27.1, ip: 10.24.27.27/24 }
      - { id: 308, hostname: wordpress9, gw: 10.24.27.1, ip: 10.24.27.28/24 } 
      - { id: 309, hostname: wordpress10, gw: 10.24.27.1, ip: 10.24.27.29/24 }

  tasks:
  - name: Find /var/log files equal or greater than 10 megabytes ending with .old or .log.gz via regex
    ansible.builtin.find:
      paths: /mnt/pve/files-storage/template/cache
      patterns: "^vzdump-.*\\.tar\\.zst$"
      use_regex: yes
    register: backup_file

  - name: backup_file output 
    debug:
      var: backup_file
  
  - name: Set variable to get basename
    set_fact:
      backup_filenames: "{{ backup_file.files | map(attribute='path') | map('basename') | list }}"


  - name: Create a multiple containers #change cephfs:vztmpl/[template with wordpress]
    shell: |
      pct create {{ item.id }} files-storage:vztmpl/{{ backup_filenames | join(' ') }} \ 
        -hostname "{{ item.hostname }}" \
        -cores {{ cores }} \
        -memory {{ memory }} \
        -storage "{{ storage }}" \
        -password "{{ password }}" \
        -net0 name={{ net0_name }},bridge={{ bridge }},gw={{ item.gw }},ip={{ item.ip }},firewall={{ firewall }},type={{ type }},rate={{ rate }} \
        -nameserver "{{ dns }}" \
        -rootfs "{{ storage }}:{{ gb }}" \
    args:
      executable: /bin/bash
    
    loop:
      "{{ containers }}"

  - name: Start container
    shell: |
      pct start {{ item.id }} 
    args:
      executable: /bin/bash
    loop:
      "{{ containers }}"

  - name: enable ssh
    shell: | 
      pct push {{ item.id }} /root/scripts/ssh.sh /root/ssh.sh 
      pct exec {{ item.id }} chmod u+x /root/ssh.sh 
      pct exec {{ item.id }} /root/ssh.sh 
    args:
      executable: /bin/bash
    loop:
      "{{ containers }}"

  - name: add zabbix
    shell: | 
      pct push {{ item.id }} /root/scripts/zabbix.sh /root/zabbix.sh 
      pct exec {{ item.id }} chmod u+x /root/zabbix.sh 
      pct exec {{ item.id }} /root/zabbix.sh 
    args:
      executable: /bin/bash
    loop:
      "{{ containers }}"